name: CI of ForceControlCollection (colcon)

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'

jobs:

  clang-format:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Install clang-format-14
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install clang-format-14
      - name: Run clang-format-check
        run: |
          ./.clang-format-check.sh

  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        build-type: [Debug, RelWithDebInfo]
        mc-rtc-version: [head, stable]
        exclude:
          - build-type: Debug
            mc-rtc-version: stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set ROS version
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]
          then
            echo "ROS_DISTRO=humble" >> $GITHUB_ENV
            echo "PYTHON_PACKAGE_PREFIX=python3" >> $GITHUB_ENV
          else # if [ "${{ matrix.os }}" == "ubuntu-18.04" ]
            echo "ROS_DISTRO=melodic" >> $GITHUB_ENV
            echo "PYTHON_PACKAGE_PREFIX=python" >> $GITHUB_ENV
          fi
      - name: Install ROS
        run: |
          set -e
          set -x
          sudo apt install software-properties-common
          sudo add-apt-repository universe
          sudo apt update && sudo apt install curl -y
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt-get update -qq
          sudo apt-get install -qq ros-${ROS_DISTRO}-ros-base ros-${ROS_DISTRO}-ament-cmake python3-colcon-common-extensions ${PYTHON_PACKAGE_PREFIX}-rosdep doxygen graphviz python3-ament-package ros-${ROS_DISTRO}-ament-cmake-clang-format 
      - name: Install mc_rtc
        run: |
          set -e
          set -x
          curl -1sLf 'https://dl.cloudsmith.io/public/mc-rtc/${{ matrix.mc-rtc-version }}/setup.deb.sh' | sudo -E bash
          sudo apt-get install -qq libmc-rtc-dev libeigen-qld-dev
      - name: Setup catkin workspace
        run: |
          echo "AMENT_PREFIX_PATH=/opt/ros/humble:$AMENT_PREFIX_PATH" >> $GITHUB_ENV
          mkdir -p ${GITHUB_WORKSPACE}/colcon_ws/src/
          cd ${GITHUB_WORKSPACE}/colcon_ws
          set +x
          . /opt/ros/${ROS_DISTRO}/setup.bash
      # - name: Checkout repository code
      #   uses: actions/checkout@v2
      #   with:
      #     submodules: recursive
      #     path: colcon_ws/src/ForceControlCollection
      - name: Checkout QpSolverCollection
        uses: actions/checkout@v2
        with:
          ref: feature/implement-ci-ros2
          repository: nqtabokado/QpSolverCollection
          submodules: recursive
          path: colcon_ws/src/QpSolverCollection
      # - name: Rosdep install
      #   run: |
      #     set -e
      #     set -x
      #     cd ${GITHUB_WORKSPACE}/colcon_ws
      #     set -x
      #     sudo rosdep init
      #     rosdep update
      #     rosdep install -y -r --from-paths src --ignore-src
      # - name: Colcon build
      #   run: |
      #     set -e
      #     set -x
      #     cd ${GITHUB_WORKSPACE}/colcon_ws
      #     source /opt/ros/humble/setup.bash
      #     echo "CMAKE_PREFIX_PATH=/opt/ros/humble:$CMAKE_PREFIX_PATH" >> $GITHUB_ENV
      #     echo "AMENT_PREFIX_PATH=/opt/ros/humble:$AMENT_PREFIX_PATH" >> $GITHUB_ENV
      #     set -x
      #     doxygen -u ./src/QpSolverCollection/doc/Doxyfile.in
      #     doxygen -u ./src/ForceControlCollection/doc/Doxyfile.extra.in
      #     mkdir -p ${{ github.workspace }}/install
      #     chmod -R 777 ${{ github.workspace }}/install
      #     sudo colcon build --packages-select qp_solver_collection --cmake-args -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DENABLE_QLD=ON -DINSTALL_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install
      #     set +x
      #     . install/setup.bash
      - name: Colcon build qp_solver_collection
        uses: jrl-umi3218/github-actions/build-colcon-project@master
        with:
          build-type: ${{ matrix.build-type }}
          cmake-args: -DUSE_ROS2=ON -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DENABLE_QLD=ON -DINSTALL_DOCUMENTATION=ON
          build-packages: qp_solver_collection
          test-packages: qp_solver_collection
      # - name: Checkout repository code
      #   uses: actions/checkout@v2
      #   with:
      #     submodules: recursive
      #     path: colcon_ws/src/ForceControlCollection
      - name: Colcon build force_control_collection
        uses: jrl-umi3218/github-actions/build-colcon-project@master
        with:
          build-type: ${{ matrix.build-type }}
          cmake-args: -DUSE_ROS2=ON -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DAMENT_CMAKE_UNINSTALL_TARGET=OFF
          build-packages: force_control_collection
          test-packages: force_control_collection
      - name: Upload documentation
        # Only run for one configuration and on origin master branch
        if: matrix.os == 'ubuntu-22.04' && matrix.build-type == 'RelWithDebInfo' && matrix.mc-rtc-version == 'head' && github.repository_owner == 'isri-aist' && github.ref == 'refs/heads/master'
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/colcon_ws/src/ForceControlCollection
          git config --global user.name "Masaki Murooka"
          git config --global user.email "m-murooka@aist.go.jp"
          git remote set-url origin "https://mmurooka:${{ secrets.CI_TOKEN }}@github.com/isri-aist/ForceControlCollection"
          git fetch --depth=1 origin gh-pages:gh-pages
          git checkout --quiet gh-pages
          rm -rf doxygen/ cmake/
          cp -r ${GITHUB_WORKSPACE}/colcon_ws/build/force_control_collection/doc/html/ doxygen
          git add doxygen
          git_status=`git status -s`
          if test -n "$git_status"; then
            git commit --quiet -m "Update Doxygen HTML files from commit ${{ github.sha }}"
            git push origin gh-pages
          else
            echo "Github pages documentation is already up-to-date."
          fi
